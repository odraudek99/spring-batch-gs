<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/batch
http://www.springframework.org/schema/batch/spring-batch.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- <import resource="classpath:baseContext.xml" /> -->


	<batch:job id="processFileJob" job-repository="jobRepository">
		<batch:step id="processFileStep">
			<batch:tasklet>
				<batch:chunk 
					reader="processFileItemReader" 
					processor="elementProcessor"
					writer="processFileXMLWriter" 
					commit-interval="2" />
			</batch:tasklet>
		</batch:step>
		
		<!-- <batch:step id="step1">
			<batch:tasklet>
				<batch:chunk 
					reader="reader1" 
					processor="processor1"
					writer="writer1" 
					commit-interval="2" />
			</batch:tasklet>
		</batch:step> -->
		
	</batch:job> 


	<bean id="processFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="file:///home/odraudek99/github/spring-batch-gs/src/main/resources/input.txt" />
		<property name="lineMapper" ref="processFileLineMapper" />
	</bean>

			<bean id="processFileLineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper" ref="elementAutoFieldSetMapper" />
				<property name="lineTokenizer" ref="processFileLengthLineTokenizer" />
			</bean>
		
			<bean id="elementAutoFieldSetMapper" class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
				<property name="prototypeBeanName" value="element" />
			</bean>
		
			<bean id="element" class="mx.com.odraudek99.batch.jobs.fileProcessor.model.Element" scope="prototype" />
		
			<bean id="processFileLengthLineTokenizer" class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
				<property name="names" value="id,text" />
				<property name="columns" value="1-2, 3-9" />
			</bean>

	<!--elementProcessor Bean is a class: mx.com.odraudek99.batch.jobs.fileProcessor.model.ElementProcessor  -->

	<bean id="processFileXMLWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:///home/odraudek99/github/spring-batch-gs/src/main/resources/output.xml" />
		<property name="marshaller" ref="elementMarshaller" />
		<property name="rootTagName" value="elements" />
		<property name="overwriteOutput" value="true" />
	</bean>

			<bean id="elementMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
				<property name="aliases">
					<util:map id="aliases">
						<entry key="anotherElement" value="mx.com.odraudek99.batch.jobs.fileProcessor.model.AnotherElement" />
					</util:map>
				</property>
			</bean>
</beans>


